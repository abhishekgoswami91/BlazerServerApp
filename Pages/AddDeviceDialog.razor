@page "/adddeviceddialog/{Id}"
@using BlazorServerApp.Data
@inject IOperationDeviceService OperationService
@inject Microsoft.AspNetCore.Components.NavigationManager navigation
<div class="simple-form" style="width:500px;">
    <div class="modal-header" style="padding:0px !important;margin-top:-9px">
        <h3 class="modal-title">Add Device</h3>
        <button type="button" @onclick="Cancel" class="close">
            <span aria-hidden="true">X</span>
        </button>
    </div>
    <div class="modal-body">
        <EditForm Model="@operationDeviceModel">
            <div class="form-group" style="display:none;">
                <label for="Name" class="control-label">Operation Id</label>
                <input for="Name" type="text" value="@OperationId" class="form-control" bind="@OperationId" readonly />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Device Name</label>
                <InputText class="form-control" @bind-Value="DeviceName" />
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label">Device Type</label>
                <InputSelect asp-for="deviceType" class="form-control" @bind-Value="DeviceType">
                    <option value="0">BarcodeScanner</option>
                    <option value="1">Printer</option>
                    <option value="2">Camera</option>
                    <option value="3">SocketTray</option>
                </InputSelect>
            </div>
        </EditForm>
    </div>
    <div class="modal-footer">
        <button @onclick="@(() => AddOperationDevice(OperationId,DeviceName,DeviceType))" class="btn btn-primary">Save</button>
    </div>
</div>
@code {
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter]
    public string DeviceName { get; set; }

    [Parameter]
    public int DeviceType { get; set; }

    [Parameter]
    public int OperationId { get; set; }

    protected OperationDeviceModel operationDeviceModel = new();
    protected void AddOperationDevice(int OperationId, string DeviceName, int DeviceType)
    {
        OperationService.UpdateDevice(OperationId, DeviceName, DeviceType);
        navigation.NavigateTo("/OperationService", forceLoad: true);
    }
    void Cancel()
    {
        ModalInstance.CancelAsync();
    }
}
